package com.msaunthaigh.rehearsalscheduler.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.http.HttpStatus;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;

import com.msaunthaigh.rehearsalscheduler.entity.ScenePart;

import io.swagger.v3.oas.annotations.OpenAPIDefinition;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.info.Info;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.servers.Server;

@Validated
@RequestMapping("/scene_part")

@OpenAPIDefinition(info = @Info(title = "Scenes and Parts"),
servers = {@Server(url = "http://localhost:8080", description = "Local server")})
public interface ScenePartController {	
	
//PUT/UPDATE operation updates information from scene, part, and castmember tables
//populateFK()
	// @formatter:off
	@Operation(
		summary = "Update scene_part table",
		description = "Updates cast_id in join table",
		responses = {
			@ApiResponse(
				responseCode = "200",
					description = "Cast ID information was updated successfully.",
					content = @Content(
						mediaType = "application/json",
						schema = @Schema(implementation = ScenePart.class))),
			@ApiResponse(
				responseCode = "400",
				description = "Invalid request parameters",
				content = @Content(
					mediaType = "application/json")),
			@ApiResponse(
				responseCode = "404",
				description = "Unable to update table with the information given",
				content = @Content(
					mediaType = "application/json")),
			@ApiResponse(
				responseCode = "500",
				description = "An unplanned error has occurred.",
				content = @Content(
					mediaType = "application/json"))
		},
			
		parameters = {
			@Parameter(
				name = "sceneNumber",
				allowEmptyValue = false,
				required = true,
				description = "Scene Number"),
			@Parameter(
				name = "partNumber",
				allowEmptyValue = false,
				required = true,
				description = "Part Number"),
			@Parameter(
				name = "castmemberId",
				allowEmptyValue = false,
				required = true,
				description = "Cast Member ID")
		}
	)
		
	@PutMapping
	@ResponseStatus(code = HttpStatus.OK)
	Optional<ScenePart> populateFK(
		@RequestParam(required = true)
		Integer sceneNumber,
		@RequestParam(required = true)
		Integer partNumber,
		@RequestParam(required = true)
		Integer castmemberId);
	// @formatter:on

}

